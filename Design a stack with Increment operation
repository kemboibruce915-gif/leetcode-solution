class CustomStack {
private:
    vector<int> stack;
    vector<int> inc;
    int maxSize;

public:
    CustomStack(int maxSize) {
        this->maxSize = maxSize;
        inc = vector<int>(maxSize, 0);
    }

    void push(int x) {
        if (stack.size() < maxSize) {
            stack.push_back(x);
        }
    }

    int pop() {
        if (stack.empty()) return -1;
        int i = stack.size() - 1;
        if (i > 0) {
            inc[i - 1] += inc[i];
        }
        int res = stack.back() + inc[i];
        stack.pop_back();
        inc[i] = 0;
        return res;
    }

    void increment(int k, int val) {
        int limit = min(k, (int)stack.size());
        if (limit > 0) {
            inc[limit - 1] += val;
        }
    }
};
